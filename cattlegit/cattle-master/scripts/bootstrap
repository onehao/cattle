#!/bin/bash
set -e

cd $(dirname $0)

apt-get update
apt-get install -y --no-install-recommends openjdk-7-jdk maven python-pip 

DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y mysql-server

# Hack to work around overlay issue
pip uninstall -y py >/dev/null >/dev/null 2>&1 || true
pip install --upgrade pip==6.0.3 tox==1.8.1 virtualenv==12.0.4

install_build_tools()
{
	BUILD_TOOLS_VERSION="0.3.1"
	tmpdir=$(mktemp -d)
	pushd $tmpdir
	curl -sSL -o build-tools.tar.gz https://github.com/rancherio/build-tools/archive/v${BUILD_TOOLS_VERSION}.tar.gz
	tar -xzvf build-tools.tar.gz && cp ./build-tools-${BUILD_TOOLS_VERSION}/bin/* /usr/bin
	popd
	rm -rf ${tmpdir}
}
install_build_tools

if [ "${CATTLE_DB_CATTLE_DATABASE}" == "mysql" ]; then
    sed -i "0,/3306/! {0,/3306/ s/3306/${CATTLE_DB_CATTLE_MYSQL_PORT}/}" /etc/mysql/my.cnf
    sed -i 's/^#\(max_connections.*\)/\1/;s/100$/1000/' /etc/mysql/my.cnf
    sed -i '/^log_error.*$/a innodb_flush_log_at_trx_commit = 1' /etc/mysql/my.cnf
    sed -i '/^max_connections.*$/a sql_mode = ONLY_FULL_GROUP_BY' /etc/mysql/my.cnf
    service mysql start

    set +e
    for ((i=0;i<60;i++))
    do
        if mysqladmin status 2> /dev/null; then
            break
        else
            sleep 1
        fi
    done
    set -e

    # If the for loop times out... something went wrong and this will fail
    db_exists=$(mysql -uroot -e 'SHOW DATABASES LIKE "cattle";'|wc -l)
    if [ $db_exists -eq 0 ]; then
	    echo "Setting up Database"
        mysql < ../resources/content/db/mysql/create_db_and_user_dev.sql
    fi
fi

if [ -x /usr/bin/cattle-binary-pull ] && [ -f ../resources/content/cattle-global.properties ]; then
    /usr/bin/cattle-binary-pull ../resources/content/cattle-global.properties /usr/bin
fi
